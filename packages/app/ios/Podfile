def required_ruby_minimum_version(version)
  if (Gem::Version.new(RUBY_VERSION) < Gem::Version.new(version))
    raise "the ruby minimum version should be higher than #{version}"
  end
end

def turn_off_resource_bundle_react_core(installer)
  # this is needed for Xcode 14, see more details here https://github.com/facebook/react-native/issues/34673
  # we should be able to remove this once CocoaPods catches up to it, see more details here https://github.com/CocoaPods/CocoaPods/issues/11402
  installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
    if ['React-Core', 'IQKeyboardManagerSwift', 'EXConstants'].include? pod_name.to_s
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
          resource_bundle_target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          end
      end
    end
  end
end

required_ruby_minimum_version '2.3.0'


# firebase-ios-sdk v9+ (react-native-firebase v15+) must use use_frameworks!
# which has compatibility issues with Flipper, Hermes & Fabric. 
# See https://rnfirebase.io/#altering-cocoapods-to-use-frameworks

# Override Firebase SDK Version
$FirebaseSDKVersion = '8.15.0'
$RNFirebaseAnalyticsWithoutAdIdSupport=true

require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

platform :ios, '14.0'
prepare_react_native_project!
# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['CI'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end


target 'OneKeyWallet' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end

  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],

    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,

    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'JXPagingView/Pager'
  pod 'JXCategoryView'
  pod "GCDWebServer", "~> 3.5.3"

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )

    # Enable the workaround below if you need flipper
    if !ENV['CI']
      __apply_Xcode_12_5_M1_post_install_workaround(installer)
    end
  end

end
