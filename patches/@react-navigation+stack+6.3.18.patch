diff --git a/node_modules/@react-navigation/stack/lib/module/views/Stack/StackView.js b/node_modules/@react-navigation/stack/lib/module/views/Stack/StackView.js
index 498b470..a71b47e 100644
--- a/node_modules/@react-navigation/stack/lib/module/views/Stack/StackView.js
+++ b/node_modules/@react-navigation/stack/lib/module/views/Stack/StackView.js
@@ -1,3 +1,25 @@
+import { Freeze as ReactFreeze } from 'react-freeze';
+
+const RenderSceneComponent = React.memo(({ route, routes, freezeOnBlur, renderScene }) => {
+  const index = routes.findIndex(r => r.key === route.key);
+  const hasFreeze = freezeOnBlur && routes.length - index > 2;
+
+  if (freezeOnBlur){
+    return (
+      <ReactFreeze freeze={hasFreeze}>
+        {renderScene()}
+      </ReactFreeze>
+    )
+  }
+
+  return renderScene();
+}, (prevProps, nextProps) => {
+  return prevProps.freezeOnBlur === nextProps.freezeOnBlur
+    && prevProps.renderScene === nextProps.renderScene
+    && prevProps.routes === nextProps.routes
+    && prevProps.route === nextProps.route;
+});
+
 function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 import { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';
 import { StackActions } from '@react-navigation/native';
@@ -187,7 +209,18 @@ export default class StackView extends React.Component {
     if (!descriptor) {
       return null;
     }
-    return descriptor.render();
+
+    const routes = this.state.routes;
+    const freezeOnBlur = descriptor?.options.freezeOnBlur
+
+    return (
+      <RenderSceneComponent
+        route={route}
+        routes={routes}
+        freezeOnBlur={freezeOnBlur}
+        renderScene={descriptor.render}
+      />
+    )
   };
   renderHeader = props => {
     return /*#__PURE__*/React.createElement(HeaderContainer, props);
